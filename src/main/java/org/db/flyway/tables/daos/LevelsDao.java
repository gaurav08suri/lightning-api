/*
 * This file is generated by jOOQ.
 */
package org.db.flyway.tables.daos;


import java.util.List;

import org.db.flyway.tables.Levels;
import org.db.flyway.tables.records.LevelsRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LevelsDao extends DAOImpl<LevelsRecord, org.db.flyway.tables.pojos.Levels, Integer> {

    /**
     * Create a new LevelsDao without any configuration
     */
    public LevelsDao() {
        super(Levels.LEVELS, org.db.flyway.tables.pojos.Levels.class);
    }

    /**
     * Create a new LevelsDao with an attached configuration
     */
    public LevelsDao(Configuration configuration) {
        super(Levels.LEVELS, org.db.flyway.tables.pojos.Levels.class, configuration);
    }

    @Override
    public Integer getId(org.db.flyway.tables.pojos.Levels object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.db.flyway.tables.pojos.Levels> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Levels.LEVELS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.db.flyway.tables.pojos.Levels> fetchById(Integer... values) {
        return fetch(Levels.LEVELS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.db.flyway.tables.pojos.Levels fetchOneById(Integer value) {
        return fetchOne(Levels.LEVELS.ID, value);
    }

    /**
     * Fetch records that have <code>level_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.db.flyway.tables.pojos.Levels> fetchRangeOfLevelName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Levels.LEVELS.LEVEL_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>level_name IN (values)</code>
     */
    public List<org.db.flyway.tables.pojos.Levels> fetchByLevelName(String... values) {
        return fetch(Levels.LEVELS.LEVEL_NAME, values);
    }

    /**
     * Fetch records that have <code>active BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.db.flyway.tables.pojos.Levels> fetchRangeOfActive(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Levels.LEVELS.ACTIVE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>active IN (values)</code>
     */
    public List<org.db.flyway.tables.pojos.Levels> fetchByActive(Boolean... values) {
        return fetch(Levels.LEVELS.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>category BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.db.flyway.tables.pojos.Levels> fetchRangeOfCategory(String lowerInclusive, String upperInclusive) {
        return fetchRange(Levels.LEVELS.CATEGORY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>category IN (values)</code>
     */
    public List<org.db.flyway.tables.pojos.Levels> fetchByCategory(String... values) {
        return fetch(Levels.LEVELS.CATEGORY, values);
    }
}
