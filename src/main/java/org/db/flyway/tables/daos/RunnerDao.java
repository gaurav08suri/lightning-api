/*
 * This file is generated by jOOQ.
 */
package org.db.flyway.tables.daos;


import java.util.List;

import org.db.flyway.tables.Runner;
import org.db.flyway.tables.records.RunnerRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RunnerDao extends DAOImpl<RunnerRecord, org.db.flyway.tables.pojos.Runner, Integer> {

    /**
     * Create a new RunnerDao without any configuration
     */
    public RunnerDao() {
        super(Runner.RUNNER, org.db.flyway.tables.pojos.Runner.class);
    }

    /**
     * Create a new RunnerDao with an attached configuration
     */
    public RunnerDao(Configuration configuration) {
        super(Runner.RUNNER, org.db.flyway.tables.pojos.Runner.class, configuration);
    }

    @Override
    public Integer getId(org.db.flyway.tables.pojos.Runner object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.db.flyway.tables.pojos.Runner> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Runner.RUNNER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.db.flyway.tables.pojos.Runner> fetchById(Integer... values) {
        return fetch(Runner.RUNNER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.db.flyway.tables.pojos.Runner fetchOneById(Integer value) {
        return fetchOne(Runner.RUNNER.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.db.flyway.tables.pojos.Runner> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Runner.RUNNER.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<org.db.flyway.tables.pojos.Runner> fetchByName(String... values) {
        return fetch(Runner.RUNNER.NAME, values);
    }

    /**
     * Fetch records that have <code>b_day BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.db.flyway.tables.pojos.Runner> fetchRangeOfBDay(String lowerInclusive, String upperInclusive) {
        return fetchRange(Runner.RUNNER.B_DAY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>b_day IN (values)</code>
     */
    public List<org.db.flyway.tables.pojos.Runner> fetchByBDay(String... values) {
        return fetch(Runner.RUNNER.B_DAY, values);
    }

    /**
     * Fetch records that have <code>mobile BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.db.flyway.tables.pojos.Runner> fetchRangeOfMobile(String lowerInclusive, String upperInclusive) {
        return fetchRange(Runner.RUNNER.MOBILE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>mobile IN (values)</code>
     */
    public List<org.db.flyway.tables.pojos.Runner> fetchByMobile(String... values) {
        return fetch(Runner.RUNNER.MOBILE, values);
    }

    /**
     * Fetch records that have <code>address BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.db.flyway.tables.pojos.Runner> fetchRangeOfAddress(String lowerInclusive, String upperInclusive) {
        return fetchRange(Runner.RUNNER.ADDRESS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>address IN (values)</code>
     */
    public List<org.db.flyway.tables.pojos.Runner> fetchByAddress(String... values) {
        return fetch(Runner.RUNNER.ADDRESS, values);
    }

    /**
     * Fetch records that have <code>gender BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.db.flyway.tables.pojos.Runner> fetchRangeOfGender(String lowerInclusive, String upperInclusive) {
        return fetchRange(Runner.RUNNER.GENDER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>gender IN (values)</code>
     */
    public List<org.db.flyway.tables.pojos.Runner> fetchByGender(String... values) {
        return fetch(Runner.RUNNER.GENDER, values);
    }

    /**
     * Fetch records that have <code>race BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.db.flyway.tables.pojos.Runner> fetchRangeOfRace(String lowerInclusive, String upperInclusive) {
        return fetchRange(Runner.RUNNER.RACE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>race IN (values)</code>
     */
    public List<org.db.flyway.tables.pojos.Runner> fetchByRace(String... values) {
        return fetch(Runner.RUNNER.RACE, values);
    }

    /**
     * Fetch records that have <code>tshirt_size BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.db.flyway.tables.pojos.Runner> fetchRangeOfTshirtSize(String lowerInclusive, String upperInclusive) {
        return fetchRange(Runner.RUNNER.TSHIRT_SIZE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tshirt_size IN (values)</code>
     */
    public List<org.db.flyway.tables.pojos.Runner> fetchByTshirtSize(String... values) {
        return fetch(Runner.RUNNER.TSHIRT_SIZE, values);
    }

    /**
     * Fetch records that have <code>collection_place BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.db.flyway.tables.pojos.Runner> fetchRangeOfCollectionPlace(String lowerInclusive, String upperInclusive) {
        return fetchRange(Runner.RUNNER.COLLECTION_PLACE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>collection_place IN (values)</code>
     */
    public List<org.db.flyway.tables.pojos.Runner> fetchByCollectionPlace(String... values) {
        return fetch(Runner.RUNNER.COLLECTION_PLACE, values);
    }
}
