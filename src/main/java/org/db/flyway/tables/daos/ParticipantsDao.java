/*
 * This file is generated by jOOQ.
 */
package org.db.flyway.tables.daos;


import java.util.List;

import org.db.flyway.tables.Participants;
import org.db.flyway.tables.records.ParticipantsRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ParticipantsDao extends DAOImpl<ParticipantsRecord, org.db.flyway.tables.pojos.Participants, Integer> {

    /**
     * Create a new ParticipantsDao without any configuration
     */
    public ParticipantsDao() {
        super(Participants.PARTICIPANTS, org.db.flyway.tables.pojos.Participants.class);
    }

    /**
     * Create a new ParticipantsDao with an attached configuration
     */
    public ParticipantsDao(Configuration configuration) {
        super(Participants.PARTICIPANTS, org.db.flyway.tables.pojos.Participants.class, configuration);
    }

    @Override
    public Integer getId(org.db.flyway.tables.pojos.Participants object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.db.flyway.tables.pojos.Participants> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Participants.PARTICIPANTS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<org.db.flyway.tables.pojos.Participants> fetchById(Integer... values) {
        return fetch(Participants.PARTICIPANTS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public org.db.flyway.tables.pojos.Participants fetchOneById(Integer value) {
        return fetchOne(Participants.PARTICIPANTS.ID, value);
    }

    /**
     * Fetch records that have <code>first_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.db.flyway.tables.pojos.Participants> fetchRangeOfFirstName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Participants.PARTICIPANTS.FIRST_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>first_name IN (values)</code>
     */
    public List<org.db.flyway.tables.pojos.Participants> fetchByFirstName(String... values) {
        return fetch(Participants.PARTICIPANTS.FIRST_NAME, values);
    }

    /**
     * Fetch records that have <code>last_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.db.flyway.tables.pojos.Participants> fetchRangeOfLastName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Participants.PARTICIPANTS.LAST_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_name IN (values)</code>
     */
    public List<org.db.flyway.tables.pojos.Participants> fetchByLastName(String... values) {
        return fetch(Participants.PARTICIPANTS.LAST_NAME, values);
    }

    /**
     * Fetch records that have <code>age BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.db.flyway.tables.pojos.Participants> fetchRangeOfAge(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Participants.PARTICIPANTS.AGE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>age IN (values)</code>
     */
    public List<org.db.flyway.tables.pojos.Participants> fetchByAge(Integer... values) {
        return fetch(Participants.PARTICIPANTS.AGE, values);
    }

    /**
     * Fetch records that have <code>mobile BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.db.flyway.tables.pojos.Participants> fetchRangeOfMobile(String lowerInclusive, String upperInclusive) {
        return fetchRange(Participants.PARTICIPANTS.MOBILE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>mobile IN (values)</code>
     */
    public List<org.db.flyway.tables.pojos.Participants> fetchByMobile(String... values) {
        return fetch(Participants.PARTICIPANTS.MOBILE, values);
    }

    /**
     * Fetch a unique record that has <code>mobile = value</code>
     */
    public org.db.flyway.tables.pojos.Participants fetchOneByMobile(String value) {
        return fetchOne(Participants.PARTICIPANTS.MOBILE, value);
    }

    /**
     * Fetch records that have <code>mail BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.db.flyway.tables.pojos.Participants> fetchRangeOfMail(String lowerInclusive, String upperInclusive) {
        return fetchRange(Participants.PARTICIPANTS.MAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>mail IN (values)</code>
     */
    public List<org.db.flyway.tables.pojos.Participants> fetchByMail(String... values) {
        return fetch(Participants.PARTICIPANTS.MAIL, values);
    }

    /**
     * Fetch a unique record that has <code>mail = value</code>
     */
    public org.db.flyway.tables.pojos.Participants fetchOneByMail(String value) {
        return fetchOne(Participants.PARTICIPANTS.MAIL, value);
    }

    /**
     * Fetch records that have <code>category BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.db.flyway.tables.pojos.Participants> fetchRangeOfCategory(String lowerInclusive, String upperInclusive) {
        return fetchRange(Participants.PARTICIPANTS.CATEGORY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>category IN (values)</code>
     */
    public List<org.db.flyway.tables.pojos.Participants> fetchByCategory(String... values) {
        return fetch(Participants.PARTICIPANTS.CATEGORY, values);
    }

    /**
     * Fetch records that have <code>country BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.db.flyway.tables.pojos.Participants> fetchRangeOfCountry(String lowerInclusive, String upperInclusive) {
        return fetchRange(Participants.PARTICIPANTS.COUNTRY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>country IN (values)</code>
     */
    public List<org.db.flyway.tables.pojos.Participants> fetchByCountry(String... values) {
        return fetch(Participants.PARTICIPANTS.COUNTRY, values);
    }

    /**
     * Fetch records that have <code>language BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.db.flyway.tables.pojos.Participants> fetchRangeOfLanguage(String lowerInclusive, String upperInclusive) {
        return fetchRange(Participants.PARTICIPANTS.LANGUAGE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>language IN (values)</code>
     */
    public List<org.db.flyway.tables.pojos.Participants> fetchByLanguage(String... values) {
        return fetch(Participants.PARTICIPANTS.LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>center BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.db.flyway.tables.pojos.Participants> fetchRangeOfCenter(String lowerInclusive, String upperInclusive) {
        return fetchRange(Participants.PARTICIPANTS.CENTER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>center IN (values)</code>
     */
    public List<org.db.flyway.tables.pojos.Participants> fetchByCenter(String... values) {
        return fetch(Participants.PARTICIPANTS.CENTER, values);
    }

    /**
     * Fetch records that have <code>rollno BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<org.db.flyway.tables.pojos.Participants> fetchRangeOfRollno(String lowerInclusive, String upperInclusive) {
        return fetchRange(Participants.PARTICIPANTS.ROLLNO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rollno IN (values)</code>
     */
    public List<org.db.flyway.tables.pojos.Participants> fetchByRollno(String... values) {
        return fetch(Participants.PARTICIPANTS.ROLLNO, values);
    }
}
